plugins {
    id 'java'
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${dependancyManagementVersion}"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/release" }
}

group = 'com.epam.training'
version = '1.0'
sourceCompatibility = '11'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    implementation 'software.amazon.awssdk:s3'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "io.projectreactor.kafka:reactor-kafka:${reactorKafkaVersion}"
    implementation 'software.amazon.awssdk:netty-nio-client'
    implementation "software.amazon.awssdk:core:${amazonSdkVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}"
    implementation "io.micrometer:micrometer-tracing-bridge-brave:${micrometerVersion}"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:localstack'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "com.amazonaws:aws-java-sdk-s3:${amazonJavaSdkS3Version}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:kafka'
    testImplementation "io.rest-assured:spring-web-test-client:${restAssuredWebTestClient}"
    testImplementation "com.squareup.okhttp3:okhttp:${mockWebServerVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${mockWebServerVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "software.amazon.awssdk:bom:${amazonSdkVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}